{"ast":null,"code":"import { FormControl, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/input\";\nfunction StudentComponent_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StudentComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Email is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class MyErrorStateMatcher {\n  isErrorState(control, form) {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\nexport class StudentComponent {\n  constructor() {\n    this.title = \"student\";\n    this.emailFormControl = new FormControl('', [Validators.required, Validators.email]);\n    this.matcher = new MyErrorStateMatcher();\n  }\n  static #_ = this.ɵfac = function StudentComponent_Factory(t) {\n    return new (t || StudentComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StudentComponent,\n    selectors: [[\"student-component\"]],\n    decls: 9,\n    vars: 4,\n    consts: [[1, \"example-form\"], [1, \"example-full-width\"], [\"type\", \"email\", \"matInput\", \"\", \"placeholder\", \"Ex. pat@example.com\", 3, \"formControl\", \"errorStateMatcher\"], [4, \"ngIf\"]],\n    template: function StudentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementStart(5, \"mat-hint\");\n        i0.ɵɵtext(6, \"Errors appear instantly!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, StudentComponent_mat_error_7_Template, 2, 0, \"mat-error\", 3);\n        i0.ɵɵtemplate(8, StudentComponent_mat_error_8_Template, 4, 0, \"mat-error\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formControl\", ctx.emailFormControl)(\"errorStateMatcher\", ctx.matcher);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.emailFormControl.hasError(\"email\") && !ctx.emailFormControl.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.emailFormControl.hasError(\"required\"));\n      }\n    },\n    dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormControlDirective, i2.NgForm, i3.MatFormField, i3.MatLabel, i3.MatHint, i3.MatError, i4.MatInput],\n    styles: [\"example-form[_ngcontent-%COMP%] {\\n  min-width: 100px;\\n  max-width: 250px;\\n  width: 100%;\\n}\\n\\n.example-full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc3R1ZGVudC9zdHVkZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7QUFDSjs7QUFFRTtFQUNFLFdBQUE7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbImV4YW1wbGUtZm9ybSB7XHJcbiAgICBtaW4td2lkdGg6IDEwMHB4O1xyXG4gICAgbWF4LXdpZHRoOiAyNTBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAuZXhhbXBsZS1mdWxsLXdpZHRoIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAA8BC,UAAU,QAAQ,gBAAgB;;;;;;;;ICK5EC,iCAAgG;IAC5FA,mDAAkC;IAAAA,iBAAY;;;;;IAClDA,iCAAyD;IAAAA,yBAAS;IAAAA,8BAAQ;IAAAA,wBAAQ;IAAAA,iBAAS;;;ADHnG,OAAM,MAAOC,mBAAmB;EAC5BC,YAAY,CAACC,OAA2B,EAAEC,IAAwC;IAC9E,MAAMC,WAAW,GAAGD,IAAI,IAAIA,IAAI,CAACE,SAAS;IAC1C,OAAO,CAAC,EAAEH,OAAO,IAAIA,OAAO,CAACI,OAAO,KAAKJ,OAAO,CAACK,KAAK,IAAIL,OAAO,CAACM,OAAO,IAAIJ,WAAW,CAAC,CAAC;EAC9F;;AASJ,OAAM,MAAOK,gBAAgB;EAL7BC;IAMI,UAAK,GAAG,SAAS;IACjB,qBAAgB,GAAG,IAAIb,WAAW,CAAC,EAAE,EAAC,CAACC,UAAU,CAACa,QAAQ,EAACb,UAAU,CAACc,KAAK,CAAC,CAAC;IAC7E,YAAO,GAAG,IAAIZ,mBAAmB,EAAE;;EACtC;qBAJYS,gBAAgB;EAAA;EAAA;UAAhBA,gBAAgB;IAAAI;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QClB7BlB,+BAA2B;QAEVA,qBAAK;QAAAA,iBAAY;QAC5BA,2BACyC;QACzCA,gCAAU;QAAAA,wCAAwB;QAAAA,iBAAW;QAC3CA,6EACkD;QAClDA,6EAAuG;QAC3GA,iBAAiB;;;QANcA,eAAgC;QAAhCA,kDAAgC;QAG/CA,eAAkF;QAAlFA,2GAAkF;QAElFA,eAA2C;QAA3CA,gEAA2C","names":["FormControl","Validators","i0","MyErrorStateMatcher","isErrorState","control","form","isSubmitted","submitted","invalid","dirty","touched","StudentComponent","constructor","required","email","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\microservicespractise\\studentappui\\src\\main\\webapp\\frontend\\src\\app\\student\\student.component.ts","D:\\microservicespractise\\studentappui\\src\\main\\webapp\\frontend\\src\\app\\student\\student.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormControl, FormGroupDirective, NgForm, Validators } from \"@angular/forms\";\r\nimport { ErrorStateMatcher } from \"@angular/material/core\";\r\n\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher{\r\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null) : boolean {\r\n        const isSubmitted = form && form.submitted;\r\n        return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n    }\r\n}\r\n\r\n\r\n@Component({\r\n    selector: \"student-component\",\r\n    templateUrl: \"./student.component.html\",\r\n    styleUrls: [\"./student.component.scss\"]\r\n})\r\nexport class StudentComponent{\r\n    title = \"student\"\r\n    emailFormControl = new FormControl('',[Validators.required,Validators.email])\r\n    matcher = new MyErrorStateMatcher();\r\n}","<form class=\"example-form\">\r\n    <mat-form-field class=\"example-full-width\">\r\n      <mat-label>Email</mat-label>\r\n      <input type=\"email\" matInput [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\"\r\n             placeholder=\"Ex. pat@example.com\">\r\n      <mat-hint>Errors appear instantly!</mat-hint>\r\n        <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n            Please enter a valid email address</mat-error>\r\n        <mat-error *ngIf=\"emailFormControl.hasError('required')\">Email is <strong>required</strong></mat-error>\r\n    </mat-form-field>\r\n  </form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}